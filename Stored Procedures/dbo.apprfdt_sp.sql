SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO









 



					 










































 










































































































































































































































































































































































































































































































































































































 






















































































CREATE PROCEDURE [dbo].[apprfdt_sp] 
					@vendor_code1 	varchar(12), 
					@vendor_code2 	varchar(12), 
					@vendor_name1 	varchar(40), 
					@vendor_name2 	varchar(40),
					@class_code1 	varchar (8),
					@class_code2 	varchar (8),
					@balance1 		float,
					@balance2 		float,
					@all_balances 	smallint,
					@use_home_curr 	smallint,
					@debug_level 	smallint = 0
AS

DECLARE
	@home_precision smallint,
	@oper_precision smallint
		
IF ( @debug_level > 1 ) SELECT CONVERT(char,getdate(),109) + "  " + "tmp/apprfdt.sp" + ", line " + STR( 61, 5 ) + " -- ENTRY: "
	
SELECT @home_precision = b.curr_precision,
	 @oper_precision = c.curr_precision
FROM glco a, glcurr_vw b, glcurr_vw c
WHERE a.home_currency = b.currency_code
AND a.oper_currency = c.currency_code



INSERT INTO #apprfdt
SELECT
	aptrxage.vendor_code,
	apvend.vendor_name,

	balance_home = (SIGN(sum( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) )) * ROUND(ABS(sum( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) )) + 0.0000001, @home_precision)),
	
	vouch_home = (SIGN(sum( ( SIGN(-ABS(trx_type - 4091)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) )) * ROUND(ABS(sum( ( SIGN(-ABS(trx_type - 4091)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) )) + 0.0000001, @home_precision)),

	dm_home		 = (SIGN(sum( ( SIGN(-ABS(trx_type - 4161)) + 1 ) * (SIGN(-ABS(apply_trx_type))+1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) )) * ROUND(ABS(sum( ( SIGN(-ABS(trx_type - 4161)) + 1 ) * (SIGN(-ABS(apply_trx_type))+1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) )) + 0.0000001, @home_precision)),

	pyt_home	 = 



(SIGN(sum( ( ( SIGN(-ABS(trx_type - 4111)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4011)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4171)) + 1 ) * (SIGN(-ABS(apply_trx_type - 4111))+1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4171)) + 1 ) * (SIGN(-ABS(apply_trx_type - 4011))+1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) )) * ROUND(ABS(sum( ( ( SIGN(-ABS(trx_type - 4111)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4011)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4171)) + 1 ) * (SIGN(-ABS(apply_trx_type - 4111))+1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4171)) + 1 ) * (SIGN(-ABS(apply_trx_type - 4011))+1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) )) + 0.0000001, @home_precision)),
																			
	disc_home	 = 
(SIGN(sum( ( ( SIGN(-ABS(trx_type - 4131)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4132)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) )) * ROUND(ABS(sum( ( ( SIGN(-ABS(trx_type - 4131)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4132)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) )) + 0.0000001, @home_precision)), 
	
	void_home	 = 






(SIGN(sum( ( ( SIGN(-ABS(trx_type - 4112)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4113)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4114)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4115)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4121)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4181)) + 1) * (SIGN(-ABS(apply_trx_type - 4111))+1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4181)) + 1) * (SIGN(-ABS(apply_trx_type - 4011))+1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) )) * ROUND(ABS(sum( ( ( SIGN(-ABS(trx_type - 4112)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4113)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4114)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4115)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4121)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4181)) + 1) * (SIGN(-ABS(apply_trx_type - 4111))+1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4181)) + 1) * (SIGN(-ABS(apply_trx_type - 4011))+1) * ( amount * ( SIGN(1 + SIGN(rate_home))*(rate_home) + (SIGN(ABS(SIGN(ROUND(rate_home,6))))/(rate_home + SIGN(1 - ABS(SIGN(ROUND(rate_home,6)))))) * SIGN(SIGN(rate_home) - 1) ) ) ) )) + 0.0000001, @home_precision)),

	balance_oper = (SIGN(sum( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) )) * ROUND(ABS(sum( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) )) + 0.0000001, @oper_precision)),
	
	vouch_oper = (SIGN(sum( ( SIGN(-ABS(trx_type - 4091)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) )) * ROUND(ABS(sum( ( SIGN(-ABS(trx_type - 4091)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) )) + 0.0000001, @oper_precision)),

	dm_oper		 = (SIGN(sum( ( SIGN(-ABS(trx_type - 4161)) + 1 ) * (SIGN(-ABS(apply_trx_type))+1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) )) * ROUND(ABS(sum( ( SIGN(-ABS(trx_type - 4161)) + 1 ) * (SIGN(-ABS(apply_trx_type))+1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) )) + 0.0000001, @oper_precision)),

	pyt_oper	 = 



(SIGN(sum( ( ( SIGN(-ABS(trx_type - 4111)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4011)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4171)) + 1 ) * (SIGN(-ABS(apply_trx_type - 4111))+1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4171)) + 1 ) * (SIGN(-ABS(apply_trx_type - 4011))+1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) )) * ROUND(ABS(sum( ( ( SIGN(-ABS(trx_type - 4111)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4011)) + 1 ) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4171)) + 1 ) * (SIGN(-ABS(apply_trx_type - 4111))+1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4171)) + 1 ) * (SIGN(-ABS(apply_trx_type - 4011))+1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) )) + 0.0000001, @oper_precision)),
								
	disc_oper	 = 
(SIGN(sum( ( ( SIGN(-ABS(trx_type - 4131)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4132)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) )) * ROUND(ABS(sum( ( ( SIGN(-ABS(trx_type - 4131)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4132)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) )) + 0.0000001, @oper_precision)), 
	
	void_oper	 = 





(SIGN(sum( ( ( SIGN(-ABS(trx_type - 4113)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4114)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4115)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4121)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4181)) + 1) * (SIGN(-ABS(apply_trx_type - 4111))+1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4181)) + 1) * (SIGN(-ABS(apply_trx_type - 4011))+1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) )) * ROUND(ABS(sum( ( ( SIGN(-ABS(trx_type - 4113)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4114)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4115)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4121)) + 1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4181)) + 1) * (SIGN(-ABS(apply_trx_type - 4111))+1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) + ( ( SIGN(-ABS(trx_type - 4181)) + 1) * (SIGN(-ABS(apply_trx_type - 4011))+1) * ( amount * ( SIGN(1 + SIGN(rate_oper))*(rate_oper) + (SIGN(ABS(SIGN(ROUND(rate_oper,6))))/(rate_oper + SIGN(1 - ABS(SIGN(ROUND(rate_oper,6)))))) * SIGN(SIGN(rate_oper) - 1) ) ) ) )) + 0.0000001, @oper_precision))
FROM aptrxage, apvend
WHERE trx_type IN (4091, 4111, 4011, 
					4112, 4113, 4114, 4115, 4121, 4131, 4132, 4161, 4171, 4181)
AND aptrxage.vendor_code BETWEEN @vendor_code1 AND @vendor_code2
AND class_code BETWEEN @class_code1 AND @class_code2
AND aptrxage.vendor_code = apvend.vendor_code
AND apvend.vendor_name BETWEEN @vendor_name1 AND @vendor_name2
GROUP BY aptrxage.vendor_code, apvend.vendor_name


IF ( @all_balances != 1 )
BEGIN
	IF ( @use_home_curr = 1 )
	BEGIN
		DELETE FROM #apprfdt
		WHERE ((balance_home) < (@balance1) - 0.0000001)
		OR ((balance_home) > (@balance2) + 0.0000001)
	END
	ELSE
	BEGIN
		DELETE FROM #apprfdt
		WHERE ((balance_oper) < (@balance1) - 0.0000001)
		OR ((balance_oper) > (@balance2) + 0.0000001)
	END
END

IF (@@error != 0)
	RETURN -1


IF ( @debug_level > 1 ) SELECT CONVERT(char,getdate(),109) + "  " + "tmp/apprfdt.sp" + ", line " + STR( 172, 5 ) + " -- EXIT: "
RETURN 0
GO
GRANT EXECUTE ON  [dbo].[apprfdt_sp] TO [public]
GO
